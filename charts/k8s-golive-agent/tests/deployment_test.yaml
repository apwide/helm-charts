suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should support no auth config
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].env
          value: null
  - it: should support existing secret with token
    set:
      golive.auth.existingSecret: "my-secret"
      golive.auth.tokenKey: "existing-token"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_TOKEN')].valueFrom.secretKeyRef.name
          value: my-secret
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_TOKEN')].valueFrom.secretKeyRef.key
          value: existing-token
  - it: should support existing secret with username/password
    set:
      golive.auth.existingSecret: "my-secret"
      golive.auth.usernameKey: "my-username"
      golive.auth.passwordKey: "my-password"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_USERNAME')].valueFrom.secretKeyRef.name
          value: my-secret
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_USERNAME')].valueFrom.secretKeyRef.key
          value: my-username
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_PASSWORD')].valueFrom.secretKeyRef.name
          value: my-secret
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_PASSWORD')].valueFrom.secretKeyRef.key
          value: my-password
  - it: should support direct username/password
    set:
      golive.auth.username: "admin"
      golive.auth.password: "admin"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_USERNAME')].valueFrom.secretKeyRef.key
          value: username
  - it: should support direct token
    set:
      golive.auth.token: "my-token"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'GOLIVE_TOKEN')].valueFrom.secretKeyRef.key
          value: token
  - it: should support image args
    set:
      image.args:
        - "-v=6"
        - "-kubeconfig=/etc/test.yaml"
#      image.args: "{-v=6,-kubeconfig=/etc/test.yaml}"
#      image.args[0]: "-v=6"
#      image.args[1]: "-kubeconfig=/etc/test.yaml"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].args[0]
          value: "-v=6"
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: "-kubeconfig=/etc/test.yaml"
